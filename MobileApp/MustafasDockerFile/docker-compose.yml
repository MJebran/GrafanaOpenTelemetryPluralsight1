version: '3'

services:
  db:
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
    volumes: 
      - ../TestsRUS/20240212.07.58.45.sql:/docker-entrypoint-initdb.d/A_Init.sql
    networks:
      otel:
      
    # healthcheck:
    #   test: ["CMD-SHELL", "pg_isready"]
    #   interval: 10s
    #   timeout: 5s
    #   retries: 5
    

  blazorapp:
    container_name: Mustafa-blazorapp
    build: ..
    ports:
      - 8059:8080
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - TicketsDB=user id = postgres; password=postgres; server=db; database= postgres; port= 5441
    depends_on:
      - db
    healthcheck:
      test: weget --tries=1 http://localhost:8059/healthcheck || exit 1
      interval: 3s
      retries: 1
      start_period: 5s
      timeout: 1s
    restart: unless-stopped
    networks:
      - otel
  

  blackbox:
    # https://github.com/prometheus/blackbox_exporter/releases
    image: prom/blackbox-exporter:v0.23.0
    container_name: Mustafa-blackbox #check this if it was not running
    restart: unless-stopped
    ports:
        - "4355:9115"
    volumes:
        - ../blackbox/blackbox.yml:/etc/blackbox/blackbox.yml
    command: --config.file=/etc/blackbox/blackbox.yml
    depends_on:
      - blazorapp
    networks:
        otel:

  prometheus:
      # https://github.com/prometheus/prometheus/releases
      image: prom/prometheus:v2.43.0
      container_name: Mustafa-prometheus # check this if it was not running
      hostname: prometheus
      restart: unless-stopped
      ports:
          - "4354:9090"
      volumes:
          - ../prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      depends_on:
          - blackbox
      networks:
        otel:

  grafana:
      # https://github.com/grafana/grafana/releases
      image: grafana/grafana:9.4.7
      container_name: Mustafa-grafana # check this if it was not running
      environment:
        - GF_AUTH_ANONYMOUS_ENABLED=true
        - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
        - GF_AUTH_DISABLE_LOGIN_FORM=true
      volumes:
        # - grafana-data:/var/lib/grafana
        - ../grafana/provisioning:/etc/grafana/provisioning
      restart: unless-stopped
      user: root
      ports:
        - "4700:3000"
      depends_on:
        - prometheus 
        - loki 
      networks:
        otel:
      

  loki:
    image: grafana/loki:2.8.0
    container_name: Mustafa-loki # chekc this too
    command: -config.file=/etc/loki/local-config.yaml
    ports:
      - 8100:8100
    networks:
      otel:

  zipkin:
    image: openzipkin/zipkin
    container_name: Mustafa-zipkin
    restart: always
    ports:
      - 9521:9411   # you can change the first one
    networks:
      otel:
  

  otel-collector:
  # https://github.com/open-telemetry/opentelemetry-collector-contrib/releases
    container_name: Mustafa-otel  # check this if error occurs
    hostname: my-otel-collector
    image: otel/opentelemetry-collector-contrib:0.75.0
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ../otel/otel.yml:/etc/otel-collector-config.yaml

    ports:
      - 8978:8978 #prometheus metrics
      - 859:8859 #prometheus exporter metrics
      - 4517:4517 #OTLP gRPC receiver
      - 9230:55679 #zpages
      - 13233:13233 #Health Check
    networks:
      otel:

networks:
  otel:
  # databaseTunnel:
  #   driver: bridge

volumes:
   loki:
   prometheus:
   tempo:

